###########
# BUILDER #
###########

# pull official base image
FROM python:3.10.15-alpine3.20 as builder

# set work directory
RUN mkdir /fantasy
WORKDIR /fantasy

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apk update && apk add gcc
RUN apk add --update make automake gcc g++ subversion python3-dev musl-dev

# lint
RUN pip install --upgrade pip
RUN pip install flake8==6.0.0
COPY . /fantasy/
RUN flake8 --ignore=E501,F401 .

# install python dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /fantasy/wheels -r requirements.txt



#########
# FINAL #
#########

# pull official base image
FROM python:3.10.15-alpine3.20

# create directory for the app user
RUN mkdir -p /home/fantasy

# create the app user
RUN addgroup --system fantasy && adduser --system fantasy --ingroup fantasy

# create the appropriate directories
ENV HOME=/home/fantasy
ENV APP_HOME=/home/fantasy/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add netcat-openbsd
COPY --from=builder /fantasy/wheels /wheels
COPY --from=builder /fantasy/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy project
COPY . $APP_HOME

# copy entrypoint.prod.sh
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# chown all the files to the app user
RUN chown -R fantasy:fantasy $APP_HOME

# change to the app user
USER fantasy

# run entrypoint.prod.sh
ENTRYPOINT ["/home/fantasy/web/entrypoint.prod.sh"]                       