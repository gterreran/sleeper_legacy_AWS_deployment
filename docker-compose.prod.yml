version: '3.8'

services:
  sleeper-legacy-web:
    container_name: sleeper-legacy-web
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: ${AWS_WEB_IMAGE}
    command: gunicorn fantasy.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/fantasy/web/static
    expose:
      - 8000
    environment:
      - DATABASE=${DATABASE}
      - DATABASE_ENGINE=${DATABASE_ENGINE}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_DEBUG=0
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - VIRTUAL_PORT=${VIRTUAL_PORT}
      - LETSENCRYPT_HOST=${LETSENCRYPT_HOST}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}
    # depends_on:
    #   - sleeper-legacy-db
  # sleeper-legacy-db:
  #   image: postgres:15
  #   container_name: sleeper-legacy-db
  #   environment:
  #    - POSTGRES_DB=${DATABASE_NAME}
  #    - POSTGRES_USER=${DATABASE_USER}
  #    - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
  #   volumes:
  #   - postgres_data:/var/lib/postgresql/data
  nginx-proxy:
    container_name: nginx-proxy
    build: ./nginx
    image: ${AWS_NGINX_IMAGE}
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/fantasy/web/static
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - sleeper-legacy-web
  acme-companion:
    image: nginxproxy/acme-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=${DEFAULT_EMAIL}
    #  - ACME_CA_URI=${ACME_CA_URI}
      - NGINX_PROXY_CONTAINER=${NGINX_PROXY_CONTAINER}
    depends_on:
      - nginx-proxy
      
volumes:
  #postgres_data:
  static_volume:
  certs:
  html:
  vhost:
  acme: